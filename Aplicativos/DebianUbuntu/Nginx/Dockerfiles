FROM php:7.2-fpm

# Copy composer.lock and composer.json
COPY composer.lock composer.json /var/www/

# Set working directory
WORKDIR /var/www

# Install dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    libpng-dev \
    libjpeg62-turbo-dev \
    libfreetype6-dev \
    locales \
    zip \
    jpegoptim optipng pngquant gifsicle \
    vim \
    unzip \
    git \
    curl

# Clear cache
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Install extensions
RUN docker-php-ext-install pdo_mysql mbstring zip exif pcntl
RUN docker-php-ext-configure gd --with-gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include/
RUN docker-php-ext-install gd

# Install composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Add user for laravel application
RUN groupadd -g 1000 www
RUN useradd -u 1000 -ms /bin/bash -g www www

# Copy existing application directory contents
COPY . /var/www

# Copy existing application directory permissions
COPY --chown=www:www . /var/www

# Change current user to www
USER www

# Expose port 9000 and start php-fpm server
EXPOSE 9000
CMD ["php-fpm"]
# https://www.digitalocean.com/community/tutorials/how-to-set-up-laravel-nginx-and-mysql-with-docker-compose-pt
--------------
FROM nginx:1.12.0-alpine
LABEL maintainer "Lucid Programmer<lucidprogrammer@hotmail.com>"
RUN apk add --no-cache jq
COPY nginx.conf /etc/nginx/nginx.conf
COPY default.conf /etc/nginx/conf.d/default.conf
COPY default-ssl.conf /etc/nginx/conf.d/default-ssl.template
# keep an ssl folder already created
RUN mkdir -p /etc/nginx/ssl/

# keep a folder for proxies configuration json file - expects proxies.json
RUN mkdir -p /etc/nginx/conf.d/proxies
# keep a folder for locations configuration
RUN mkdir -p /etc/nginx/conf.d/locations
# keep a folder for upstream configurations
RUN mkdir -p /etc/nginx/conf.d/upstream

# copy the sample json file for info
COPY proxies.sample.json /etc/nginx/conf.d/proxies/proxies.json.sample
# copy the default as a sample, if there is no proxies.json in /proxies folder we will convert this to default.conf
COPY location.default.conf /etc/nginx/conf.d/locations/default.sample
COPY location.proxy.basic /etc/nginx/conf.d/locations/proxy.basic
COPY location.proxy.websockets /etc/nginx/conf.d/locations/proxy.websockets

COPY entrypoint.sh /entrypoint.sh

RUN addgroup -g 1000 -S www-data \
 && adduser -u 1000 -D -S -G www-data www-data

ENTRYPOINT ["/entrypoint.sh"]

---------------


